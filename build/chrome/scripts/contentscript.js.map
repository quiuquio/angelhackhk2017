{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/scripts/contentscript.js","src/scripts/utils/ext.js"],"names":[],"mappings":"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","file":"contentscript.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import ext from \"./utils/ext\";\n//import zlib from \"../../node_modules/png-js/zlib.js\"\n//import blockhash from \"./blockhash.js\"\n\n//var blockhash = require('blockhash');\n//var Buffer = require('buffer/').Buffer;\n//var Jimp = require(\"jimp\");\n\nvar extractTags = function (sendResponse) {\n  var url = document.location.href;\n  if(!url || !url.match(/^http/)) return;\n\n  var data = {\n    title: \"\",\n    description: \"\",\n    url: document.location.href,\n    imagesArray: []\n  }\n\n  var ogTitle = document.querySelector(\"meta[property='og:title']\");\n  if(ogTitle) {\n    data.title = ogTitle.getAttribute(\"content\")\n  } else {\n    data.title = document.title\n  }\n\n  var descriptionTag = document.querySelector(\"meta[property='og:description']\") || document.querySelector(\"meta[name='description']\")\n  if(descriptionTag) {\n    data.description = descriptionTag.getAttribute(\"content\")\n  }\n\n  var imagesArray = document.getElementsByTagName(\"img\");\n  /*if(imagesArray.length>0) {\n    data.imagesArray = imagesArray[0].src;\n  }*/\n  if(imagesArray.length > 0) {\n    for (var i = 0; i < imagesArray.length; i++) {        \n        data.imagesArray.push({\n          'url':imagesArray[i].src,\n          'hash': 123\n        });      \n    }\n  }\n\n  //data.imagesArray = imagesArray[0].src;\n  sendResponse(data);\n  //console.log(imagesArray[0].src);\n  /*Jimp.read(imagesArray[0].src, function (err, image) {\n    data.hash = image.hash();\n    data.imagesArray = imagesArray[0].src;\n    sendResponse(data);\n      // do stuff with the image (if no exception)\n  });*/\n\n  //return data;\n}\n\nfunction onRequest(request, sender, sendResponse) {\n  if (request.action === 'process-page') {\n    extractTags(sendResponse);\n\n    //sendResponse(extractTags())\n  }\n}\n\next.runtime.onMessage.addListener(onRequest);","const apis = [\n  'alarms',\n  'bookmarks',\n  'browserAction',\n  'commands',\n  'contextMenus',\n  'cookies',\n  'downloads',\n  'events',\n  'extension',\n  'extensionTypes',\n  'history',\n  'i18n',\n  'idle',\n  'notifications',\n  'pageAction',\n  'runtime',\n  'storage',\n  'tabs',\n  'webNavigation',\n  'webRequest',\n  'windows',\n]\n\nfunction Extension () {\n  const _this = this\n\n  apis.forEach(function (api) {\n\n    _this[api] = null\n\n    try {\n      if (chrome[api]) {\n        _this[api] = chrome[api]\n      }\n    } catch (e) {}\n\n    try {\n      if (window[api]) {\n        _this[api] = window[api]\n      }\n    } catch (e) {}\n\n    try {\n      if (browser[api]) {\n        _this[api] = browser[api]\n      }\n    } catch (e) {}\n    try {\n      _this.api = browser.extension[api]\n    } catch (e) {}\n  })\n\n  try {\n    if (browser && browser.runtime) {\n      this.runtime = browser.runtime\n    }\n  } catch (e) {}\n\n  try {\n    if (browser && browser.browserAction) {\n      this.browserAction = browser.browserAction\n    }\n  } catch (e) {}\n\n}\n\nmodule.exports = new Extension();"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm5vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvc2NyaXB0cy9jb250ZW50c2NyaXB0LmpzIiwic3JjL3NjcmlwdHMvdXRpbHMvZXh0LmpzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7QUNBQTs7Ozs7O0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUEsSUFBSSxjQUFjLFNBQWQsV0FBYyxDQUFVLFlBQVYsRUFBd0I7QUFDeEMsTUFBSSxNQUFNLFNBQVMsUUFBVCxDQUFrQixJQUE1QjtBQUNBLE1BQUcsQ0FBQyxHQUFELElBQVEsQ0FBQyxJQUFJLEtBQUosQ0FBVSxPQUFWLENBQVosRUFBZ0M7O0FBRWhDLE1BQUksT0FBTztBQUNULFdBQU8sRUFERTtBQUVULGlCQUFhLEVBRko7QUFHVCxTQUFLLFNBQVMsUUFBVCxDQUFrQixJQUhkO0FBSVQsaUJBQWE7QUFKSixHQUFYOztBQU9BLE1BQUksVUFBVSxTQUFTLGFBQVQsQ0FBdUIsMkJBQXZCLENBQWQ7QUFDQSxNQUFHLE9BQUgsRUFBWTtBQUNWLFNBQUssS0FBTCxHQUFhLFFBQVEsWUFBUixDQUFxQixTQUFyQixDQUFiO0FBQ0QsR0FGRCxNQUVPO0FBQ0wsU0FBSyxLQUFMLEdBQWEsU0FBUyxLQUF0QjtBQUNEOztBQUVELE1BQUksaUJBQWlCLFNBQVMsYUFBVCxDQUF1QixpQ0FBdkIsS0FBNkQsU0FBUyxhQUFULENBQXVCLDBCQUF2QixDQUFsRjtBQUNBLE1BQUcsY0FBSCxFQUFtQjtBQUNqQixTQUFLLFdBQUwsR0FBbUIsZUFBZSxZQUFmLENBQTRCLFNBQTVCLENBQW5CO0FBQ0Q7O0FBRUQsTUFBSSxjQUFjLFNBQVMsb0JBQVQsQ0FBOEIsS0FBOUIsQ0FBbEI7QUFDQTs7O0FBR0EsTUFBRyxZQUFZLE1BQVosR0FBcUIsQ0FBeEIsRUFBMkI7QUFDekIsU0FBSyxJQUFJLElBQUksQ0FBYixFQUFnQixJQUFJLFlBQVksTUFBaEMsRUFBd0MsR0FBeEMsRUFBNkM7QUFDekMsV0FBSyxXQUFMLENBQWlCLElBQWpCLENBQXNCO0FBQ3BCLGVBQU0sWUFBWSxDQUFaLEVBQWUsR0FERDtBQUVwQixnQkFBUTtBQUZZLE9BQXRCO0FBSUg7QUFDRjs7QUFFRDtBQUNBLGVBQWEsSUFBYjtBQUNBO0FBQ0E7Ozs7Ozs7QUFPQTtBQUNELENBL0NEOztBQWlEQSxTQUFTLFNBQVQsQ0FBbUIsT0FBbkIsRUFBNEIsTUFBNUIsRUFBb0MsWUFBcEMsRUFBa0Q7QUFDaEQsTUFBSSxRQUFRLE1BQVIsS0FBbUIsY0FBdkIsRUFBdUM7QUFDckMsZ0JBQVksWUFBWjs7QUFFQTtBQUNEO0FBQ0Y7O0FBRUQsY0FBSSxPQUFKLENBQVksU0FBWixDQUFzQixXQUF0QixDQUFrQyxTQUFsQzs7Ozs7QUNqRUEsSUFBTSxPQUFPLENBQ1gsUUFEVyxFQUVYLFdBRlcsRUFHWCxlQUhXLEVBSVgsVUFKVyxFQUtYLGNBTFcsRUFNWCxTQU5XLEVBT1gsV0FQVyxFQVFYLFFBUlcsRUFTWCxXQVRXLEVBVVgsZ0JBVlcsRUFXWCxTQVhXLEVBWVgsTUFaVyxFQWFYLE1BYlcsRUFjWCxlQWRXLEVBZVgsWUFmVyxFQWdCWCxTQWhCVyxFQWlCWCxTQWpCVyxFQWtCWCxNQWxCVyxFQW1CWCxlQW5CVyxFQW9CWCxZQXBCVyxFQXFCWCxTQXJCVyxDQUFiOztBQXdCQSxTQUFTLFNBQVQsR0FBc0I7QUFDcEIsTUFBTSxRQUFRLElBQWQ7O0FBRUEsT0FBSyxPQUFMLENBQWEsVUFBVSxHQUFWLEVBQWU7O0FBRTFCLFVBQU0sR0FBTixJQUFhLElBQWI7O0FBRUEsUUFBSTtBQUNGLFVBQUksT0FBTyxHQUFQLENBQUosRUFBaUI7QUFDZixjQUFNLEdBQU4sSUFBYSxPQUFPLEdBQVAsQ0FBYjtBQUNEO0FBQ0YsS0FKRCxDQUlFLE9BQU8sQ0FBUCxFQUFVLENBQUU7O0FBRWQsUUFBSTtBQUNGLFVBQUksT0FBTyxHQUFQLENBQUosRUFBaUI7QUFDZixjQUFNLEdBQU4sSUFBYSxPQUFPLEdBQVAsQ0FBYjtBQUNEO0FBQ0YsS0FKRCxDQUlFLE9BQU8sQ0FBUCxFQUFVLENBQUU7O0FBRWQsUUFBSTtBQUNGLFVBQUksUUFBUSxHQUFSLENBQUosRUFBa0I7QUFDaEIsY0FBTSxHQUFOLElBQWEsUUFBUSxHQUFSLENBQWI7QUFDRDtBQUNGLEtBSkQsQ0FJRSxPQUFPLENBQVAsRUFBVSxDQUFFO0FBQ2QsUUFBSTtBQUNGLFlBQU0sR0FBTixHQUFZLFFBQVEsU0FBUixDQUFrQixHQUFsQixDQUFaO0FBQ0QsS0FGRCxDQUVFLE9BQU8sQ0FBUCxFQUFVLENBQUU7QUFDZixHQXhCRDs7QUEwQkEsTUFBSTtBQUNGLFFBQUksV0FBVyxRQUFRLE9BQXZCLEVBQWdDO0FBQzlCLFdBQUssT0FBTCxHQUFlLFFBQVEsT0FBdkI7QUFDRDtBQUNGLEdBSkQsQ0FJRSxPQUFPLENBQVAsRUFBVSxDQUFFOztBQUVkLE1BQUk7QUFDRixRQUFJLFdBQVcsUUFBUSxhQUF2QixFQUFzQztBQUNwQyxXQUFLLGFBQUwsR0FBcUIsUUFBUSxhQUE3QjtBQUNEO0FBQ0YsR0FKRCxDQUlFLE9BQU8sQ0FBUCxFQUFVLENBQUU7QUFFZjs7QUFFRCxPQUFPLE9BQVAsR0FBaUIsSUFBSSxTQUFKLEVBQWpCIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyIoZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSIsImltcG9ydCBleHQgZnJvbSBcIi4vdXRpbHMvZXh0XCI7XG4vL2ltcG9ydCB6bGliIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvcG5nLWpzL3psaWIuanNcIlxuLy9pbXBvcnQgYmxvY2toYXNoIGZyb20gXCIuL2Jsb2NraGFzaC5qc1wiXG5cbi8vdmFyIGJsb2NraGFzaCA9IHJlcXVpcmUoJ2Jsb2NraGFzaCcpO1xuLy92YXIgQnVmZmVyID0gcmVxdWlyZSgnYnVmZmVyLycpLkJ1ZmZlcjtcbi8vdmFyIEppbXAgPSByZXF1aXJlKFwiamltcFwiKTtcblxudmFyIGV4dHJhY3RUYWdzID0gZnVuY3Rpb24gKHNlbmRSZXNwb25zZSkge1xuICB2YXIgdXJsID0gZG9jdW1lbnQubG9jYXRpb24uaHJlZjtcbiAgaWYoIXVybCB8fCAhdXJsLm1hdGNoKC9eaHR0cC8pKSByZXR1cm47XG5cbiAgdmFyIGRhdGEgPSB7XG4gICAgdGl0bGU6IFwiXCIsXG4gICAgZGVzY3JpcHRpb246IFwiXCIsXG4gICAgdXJsOiBkb2N1bWVudC5sb2NhdGlvbi5ocmVmLFxuICAgIGltYWdlc0FycmF5OiBbXVxuICB9XG5cbiAgdmFyIG9nVGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwibWV0YVtwcm9wZXJ0eT0nb2c6dGl0bGUnXVwiKTtcbiAgaWYob2dUaXRsZSkge1xuICAgIGRhdGEudGl0bGUgPSBvZ1RpdGxlLmdldEF0dHJpYnV0ZShcImNvbnRlbnRcIilcbiAgfSBlbHNlIHtcbiAgICBkYXRhLnRpdGxlID0gZG9jdW1lbnQudGl0bGVcbiAgfVxuXG4gIHZhciBkZXNjcmlwdGlvblRhZyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJtZXRhW3Byb3BlcnR5PSdvZzpkZXNjcmlwdGlvbiddXCIpIHx8IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJtZXRhW25hbWU9J2Rlc2NyaXB0aW9uJ11cIilcbiAgaWYoZGVzY3JpcHRpb25UYWcpIHtcbiAgICBkYXRhLmRlc2NyaXB0aW9uID0gZGVzY3JpcHRpb25UYWcuZ2V0QXR0cmlidXRlKFwiY29udGVudFwiKVxuICB9XG5cbiAgdmFyIGltYWdlc0FycmF5ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJpbWdcIik7XG4gIC8qaWYoaW1hZ2VzQXJyYXkubGVuZ3RoPjApIHtcbiAgICBkYXRhLmltYWdlc0FycmF5ID0gaW1hZ2VzQXJyYXlbMF0uc3JjO1xuICB9Ki9cbiAgaWYoaW1hZ2VzQXJyYXkubGVuZ3RoID4gMCkge1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgaW1hZ2VzQXJyYXkubGVuZ3RoOyBpKyspIHsgICAgICAgIFxuICAgICAgICBkYXRhLmltYWdlc0FycmF5LnB1c2goe1xuICAgICAgICAgICd1cmwnOmltYWdlc0FycmF5W2ldLnNyYyxcbiAgICAgICAgICAnaGFzaCc6IDEyM1xuICAgICAgICB9KTsgICAgICBcbiAgICB9XG4gIH1cblxuICAvL2RhdGEuaW1hZ2VzQXJyYXkgPSBpbWFnZXNBcnJheVswXS5zcmM7XG4gIHNlbmRSZXNwb25zZShkYXRhKTtcbiAgLy9jb25zb2xlLmxvZyhpbWFnZXNBcnJheVswXS5zcmMpO1xuICAvKkppbXAucmVhZChpbWFnZXNBcnJheVswXS5zcmMsIGZ1bmN0aW9uIChlcnIsIGltYWdlKSB7XG4gICAgZGF0YS5oYXNoID0gaW1hZ2UuaGFzaCgpO1xuICAgIGRhdGEuaW1hZ2VzQXJyYXkgPSBpbWFnZXNBcnJheVswXS5zcmM7XG4gICAgc2VuZFJlc3BvbnNlKGRhdGEpO1xuICAgICAgLy8gZG8gc3R1ZmYgd2l0aCB0aGUgaW1hZ2UgKGlmIG5vIGV4Y2VwdGlvbilcbiAgfSk7Ki9cblxuICAvL3JldHVybiBkYXRhO1xufVxuXG5mdW5jdGlvbiBvblJlcXVlc3QocmVxdWVzdCwgc2VuZGVyLCBzZW5kUmVzcG9uc2UpIHtcbiAgaWYgKHJlcXVlc3QuYWN0aW9uID09PSAncHJvY2Vzcy1wYWdlJykge1xuICAgIGV4dHJhY3RUYWdzKHNlbmRSZXNwb25zZSk7XG5cbiAgICAvL3NlbmRSZXNwb25zZShleHRyYWN0VGFncygpKVxuICB9XG59XG5cbmV4dC5ydW50aW1lLm9uTWVzc2FnZS5hZGRMaXN0ZW5lcihvblJlcXVlc3QpOyIsImNvbnN0IGFwaXMgPSBbXG4gICdhbGFybXMnLFxuICAnYm9va21hcmtzJyxcbiAgJ2Jyb3dzZXJBY3Rpb24nLFxuICAnY29tbWFuZHMnLFxuICAnY29udGV4dE1lbnVzJyxcbiAgJ2Nvb2tpZXMnLFxuICAnZG93bmxvYWRzJyxcbiAgJ2V2ZW50cycsXG4gICdleHRlbnNpb24nLFxuICAnZXh0ZW5zaW9uVHlwZXMnLFxuICAnaGlzdG9yeScsXG4gICdpMThuJyxcbiAgJ2lkbGUnLFxuICAnbm90aWZpY2F0aW9ucycsXG4gICdwYWdlQWN0aW9uJyxcbiAgJ3J1bnRpbWUnLFxuICAnc3RvcmFnZScsXG4gICd0YWJzJyxcbiAgJ3dlYk5hdmlnYXRpb24nLFxuICAnd2ViUmVxdWVzdCcsXG4gICd3aW5kb3dzJyxcbl1cblxuZnVuY3Rpb24gRXh0ZW5zaW9uICgpIHtcbiAgY29uc3QgX3RoaXMgPSB0aGlzXG5cbiAgYXBpcy5mb3JFYWNoKGZ1bmN0aW9uIChhcGkpIHtcblxuICAgIF90aGlzW2FwaV0gPSBudWxsXG5cbiAgICB0cnkge1xuICAgICAgaWYgKGNocm9tZVthcGldKSB7XG4gICAgICAgIF90aGlzW2FwaV0gPSBjaHJvbWVbYXBpXVxuICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHt9XG5cbiAgICB0cnkge1xuICAgICAgaWYgKHdpbmRvd1thcGldKSB7XG4gICAgICAgIF90aGlzW2FwaV0gPSB3aW5kb3dbYXBpXVxuICAgICAgfVxuICAgIH0gY2F0Y2ggKGUpIHt9XG5cbiAgICB0cnkge1xuICAgICAgaWYgKGJyb3dzZXJbYXBpXSkge1xuICAgICAgICBfdGhpc1thcGldID0gYnJvd3NlclthcGldXG4gICAgICB9XG4gICAgfSBjYXRjaCAoZSkge31cbiAgICB0cnkge1xuICAgICAgX3RoaXMuYXBpID0gYnJvd3Nlci5leHRlbnNpb25bYXBpXVxuICAgIH0gY2F0Y2ggKGUpIHt9XG4gIH0pXG5cbiAgdHJ5IHtcbiAgICBpZiAoYnJvd3NlciAmJiBicm93c2VyLnJ1bnRpbWUpIHtcbiAgICAgIHRoaXMucnVudGltZSA9IGJyb3dzZXIucnVudGltZVxuICAgIH1cbiAgfSBjYXRjaCAoZSkge31cblxuICB0cnkge1xuICAgIGlmIChicm93c2VyICYmIGJyb3dzZXIuYnJvd3NlckFjdGlvbikge1xuICAgICAgdGhpcy5icm93c2VyQWN0aW9uID0gYnJvd3Nlci5icm93c2VyQWN0aW9uXG4gICAgfVxuICB9IGNhdGNoIChlKSB7fVxuXG59XG5cbm1vZHVsZS5leHBvcnRzID0gbmV3IEV4dGVuc2lvbigpOyJdfQ=="}